{
  "version": 4,
  "terraform_version": "1.2.5",
  "serial": 97,
  "lineage": "a6db6852-aac9-9177-8432-1ec7c9d91fa8",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "kubectl_file_documents",
      "name": "minio_docs",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "# Deploys a new Namespace for the MinIO Pod\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: minio # Change this value if you want a different namespace name\n  labels:\n    name: minio # Change this value to match metadata.name\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: minio-deployment\n  namespace: minio\n  labels:\n    app: minio\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      volumes:\n        - name: localvolume\n          hostPath: # MinIO generally recommends using locally-attached volumes\n            path: /mnt/disk1/data # Specify a path to a local drive or volume on the Kubernetes worker node\n            type: DirectoryOrCreate # The path to the last directory must exist\n      containers:\n      - name: minio\n        image: quay.io/minio/minio:latest\n        command:\n          - /bin/bash\n          - -c\n        args:\n          - minio server /data --console-address :9090\n        volumeMounts:\n          - mountPath: /data\n            name: localvolume # Corresponds to the `spec.volumes` Persistent Volume\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: minio # Change this value if you want a different namespace name\n  labels:\n    name: minio # Change this value to match metadata.name\n  namespace: minio\nspec:\n  selector:\n    app: minio\n  ports:\n    - protocol: TCP\n      port: 9000\n      targetPort: 9000\n      name: api\n    - protocol: TCP\n      port: 9090\n      targetPort: 9090\n      name: console\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: minimal-ingress\n  namespace: minio\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx\n  rules:\n    - host: minio.localhost\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: minio\n                port:\n                  name: console\n    - host: minio-api.localhost\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: minio\n                port:\n                  name: api\n",
            "documents": [
              "# Deploys a new Namespace for the MinIO Pod\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: minio # Change this value if you want a different namespace name\n  labels:\n    name: minio # Change this value to match metadata.name",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: minio-deployment\n  namespace: minio\n  labels:\n    app: minio\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      volumes:\n        - name: localvolume\n          hostPath: # MinIO generally recommends using locally-attached volumes\n            path: /mnt/disk1/data # Specify a path to a local drive or volume on the Kubernetes worker node\n            type: DirectoryOrCreate # The path to the last directory must exist\n      containers:\n      - name: minio\n        image: quay.io/minio/minio:latest\n        command:\n          - /bin/bash\n          - -c\n        args:\n          - minio server /data --console-address :9090\n        volumeMounts:\n          - mountPath: /data\n            name: localvolume # Corresponds to the `spec.volumes` Persistent Volume",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: minio # Change this value if you want a different namespace name\n  labels:\n    name: minio # Change this value to match metadata.name\n  namespace: minio\nspec:\n  selector:\n    app: minio\n  ports:\n    - protocol: TCP\n      port: 9000\n      targetPort: 9000\n      name: api\n    - protocol: TCP\n      port: 9090\n      targetPort: 9090\n      name: console",
              "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: minimal-ingress\n  namespace: minio\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx\n  rules:\n    - host: minio.localhost\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: minio\n                port:\n                  name: console\n    - host: minio-api.localhost\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: minio\n                port:\n                  name: api"
            ],
            "id": "810cbba615bf67bfc3f3fb04ed9e2efbed90d88d4c5c04eddeaa5913d99c9deb",
            "manifests": {
              "/api/v1/namespaces/minio": "apiVersion: v1\nkind: Namespace\nmetadata:\n  labels:\n    name: minio\n  name: minio\n",
              "/api/v1/namespaces/minio/services/minio": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: minio\n  name: minio\n  namespace: minio\nspec:\n  ports:\n  - name: api\n    port: 9000\n    protocol: TCP\n    targetPort: 9000\n  - name: console\n    port: 9090\n    protocol: TCP\n    targetPort: 9090\n  selector:\n    app: minio\n",
              "/apis/apps/v1/namespaces/minio/deployments/minio-deployment": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: minio\n  name: minio-deployment\n  namespace: minio\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      containers:\n      - args:\n        - minio server /data --console-address :9090\n        command:\n        - /bin/bash\n        - -c\n        image: quay.io/minio/minio:latest\n        name: minio\n        volumeMounts:\n        - mountPath: /data\n          name: localvolume\n      volumes:\n      - hostPath:\n          path: /mnt/disk1/data\n          type: DirectoryOrCreate\n        name: localvolume\n",
              "/apis/networking.k8s.io/v1/namespaces/minio/ingresses/minimal-ingress": "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\n  name: minimal-ingress\n  namespace: minio\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: minio.localhost\n    http:\n      paths:\n      - backend:\n          service:\n            name: minio\n            port:\n              name: console\n        path: /\n        pathType: Prefix\n  - host: minio-api.localhost\n    http:\n      paths:\n      - backend:\n          service:\n            name: minio\n            port:\n              name: api\n        path: /\n        pathType: Prefix\n"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "kube_prometheus_stack",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kube-prometheus-stack",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.61.1",
                "chart": "kube-prometheus-stack",
                "name": "kube-prometheus-stack",
                "namespace": "monitoring",
                "revision": 12,
                "values": "{\"grafana\":{\"additionalDataSources\":[{\"access\":\"proxy\",\"jsonData\":{\"derivedFields\":[{\"datasourceUid\":\"tempo\",\"matcherRegex\":\"traceID=(\\\\w+)\",\"name\":\"TraceID\",\"url\":\"$${__value.raw}\"}],\"manageAlerts\":true,\"maxLines\":1000,\"version\":1},\"name\":\"Loki\",\"type\":\"loki\",\"url\":\"http://loki-distributed-query-frontend.monitoring.svc.cluster.local:3100\"},{\"access\":\"proxy\",\"jsonData\":{\"httpMethod\":\"GET\",\"lokiSearch\":{\"datasourceUid\":\"Loki\"},\"nodeGraph\":{\"enabled\":true},\"search\":{\"hide\":false},\"serviceMap\":{\"datasourceUid\":\"prometheus\"},\"tracesToLogs\":{\"datasourceUid\":\"Loki\",\"filterBySpanID\":false,\"filterByTraceID\":false,\"mapTagNamesEnabled\":false,\"mappedTags\":[{\"key\":\"service.name\",\"value\":\"service\"}],\"spanEndTimeShift\":\"1h\",\"spanStartTimeShift\":\"1h\",\"tags\":[\"job\",\"instance\",\"pod\",\"namespace\"]},\"tracesToMetrics\":{\"datasourceUid\":\"prometheus\",\"queries\":[{\"name\":\"95th Percentile\",\"query\":\"histogram_quantile(0.95, sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[$$__rate_interval])) by (le))\"}],\"tags\":[{\"key\":\"service.name\",\"value\":\"service\"},{\"key\":\"name\",\"value\":\"span_name\"}]}},\"name\":\"Tempo\",\"type\":\"tempo\",\"uid\":\"tempo\",\"url\":\"http://tempo-distributed-query-frontend.monitoring.svc.cluster.local:3100\",\"version\":1}],\"enabled\":true,\"grafana.ini\":{\"auth\":{\"disable_login_form\":true,\"disable_signout_menu\":true},\"auth.anonymous\":{\"enabled\":true,\"org_role\":\"Admin\"},\"feature_toggles\":{\"enable\":\"tempoSearch tempoBackendSearch tempoApmTable\"},\"users\":{\"viewers_can_edit\":true}},\"ingress\":{\"annotations\":{\"kubernetes.io/ingress.class\":\"nginx\"},\"enabled\":true,\"hosts\":[\"grafana.localhost\"],\"path\":\"/\"},\"sidecar\":{\"datasources\":{\"defaultDatasourceEnabled\":true,\"exemplarTraceIdDestinations\":{\"datasourceUid\":\"tempo\",\"traceIdLabelName\":\"TraceID\"}}}},\"prometheus\":{\"ingress\":{\"annotations\":{\"kubernetes.io/ingress.class\":\"nginx\"},\"enabled\":true,\"hosts\":[\"prometheus.localhost\"],\"paths\":[\"/\"]},\"prometheusSpec\":{\"enableFeatures\":[\"remote-write-receiver\"],\"enableRemoteWriteReceiver\":true,\"serviceMonitorNamespaceSelector\":{},\"serviceMonitorSelector\":{},\"serviceMonitorSelectorNilUsesHelmValues\":false}},\"prometheus-node-exporter\":{\"hostRootFsMount\":{\"enabled\":false}}}",
                "version": "43.1.3"
              }
            ],
            "name": "kube-prometheus-stack",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "## If true, a nil or {} value for prometheus.prometheusSpec.serviceMonitorSelector will cause the\n## prometheus resource to be created with selectors based on values in the helm deployment,\n## which will also match the servicemonitors created\n##\nprometheus:\n  ingress:\n    enabled: true\n    annotations:\n      kubernetes.io/ingress.class: nginx\n    hosts: [ 'prometheus.localhost' ]\n    paths: [ \"/\" ]\n  prometheusSpec:\n    serviceMonitorSelectorNilUsesHelmValues: false\n    serviceMonitorSelector: { }\n    serviceMonitorNamespaceSelector: { }\n    enableRemoteWriteReceiver: true\n    enableFeatures:\n      - remote-write-receiver\n\ngrafana:\n  enabled: true\n  ingress:\n    enabled: true\n    annotations:\n      kubernetes.io/ingress.class: nginx\n    hosts: [ 'grafana.localhost' ]\n    path: \"/\"\n\n  sidecar:\n    datasources:\n      defaultDatasourceEnabled: true\n      exemplarTraceIdDestinations:\n        datasourceUid: tempo\n        traceIdLabelName: TraceID\n  additionalDataSources:\n    - name: Loki\n      type: loki\n      url: http://loki-distributed-query-frontend.monitoring.svc.cluster.local:3100\n      access: proxy\n      jsonData:\n        manageAlerts: true\n        derivedFields:\n          - datasourceUid: tempo\n            matcherRegex: \"traceID=(\\\\w+)\"\n            name: TraceID\n            url: $${__value.raw}\n        maxLines: 1000\n        version: 1\n    - name: Tempo\n      type: tempo\n      uid: tempo\n      url: http://tempo-distributed-query-frontend.monitoring.svc.cluster.local:3100\n      access: proxy\n      version: 1\n      jsonData:\n        httpMethod: GET\n        tracesToLogs:\n          datasourceUid: Loki\n          tags: [ 'job', 'instance', 'pod', 'namespace' ]\n          mappedTags: [ { key: 'service.name', value: 'service' } ]\n          mapTagNamesEnabled: false\n          spanStartTimeShift: '1h'\n          spanEndTimeShift: '1h'\n          filterByTraceID: false\n          filterBySpanID: false\n        tracesToMetrics:\n          datasourceUid: 'prometheus'\n          tags: [ { key: 'service.name', value: \"service\" }, { key: 'name', value: \"span_name\" } ]\n          queries:\n            - name: '95th Percentile'\n              query: 'histogram_quantile(0.95, sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[$$__rate_interval])) by (le))'\n        serviceMap:\n          datasourceUid: 'prometheus'\n        search:\n          hide: false\n        nodeGraph:\n          enabled: true\n        lokiSearch:\n          datasourceUid: Loki\n  grafana.ini:\n    feature_toggles:\n      enable: tempoSearch tempoBackendSearch tempoApmTable\n    users:\n      viewers_can_edit: true\n    auth:\n      disable_login_form: true\n      disable_signout_menu: true\n    auth.anonymous:\n      enabled: true\n      org_role: Admin\nprometheus-node-exporter:\n  hostRootFsMount:\n    enabled: false\n"
            ],
            "verify": false,
            "version": "43.1.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "helm_release.loki_distributed",
            "helm_release.metrics_server",
            "minio_s3_bucket.loki",
            "minio_s3_bucket.tempo"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "loki_distributed",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "loki-distributed",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "loki-distributed",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.6.1",
                "chart": "loki-distributed",
                "name": "loki-distributed",
                "namespace": "monitoring",
                "revision": 3,
                "values": "{\"loki\":{\"schemaConfig\":{\"configs\":[{\"from\":\"2020-09-07\",\"index\":{\"period\":\"24h\",\"prefix\":\"loki_index_\"},\"object_store\":\"s3\",\"schema\":\"v11\",\"store\":\"boltdb-shipper\"}]},\"storageConfig\":{\"aws\":{\"access_key_id\":\"minioadmin\",\"bucketnames\":\"loki\",\"endpoint\":\"http://minio.minio.svc.cluster.local:9000\",\"insecure\":true,\"s3forcepathstyle\":true,\"secret_access_key\":\"minioadmin\"},\"boltdb_shipper\":{\"active_index_directory\":\"/var/loki/index\",\"cache_location\":\"/var/loki/cache\",\"cache_ttl\":\"168h\",\"shared_store\":\"s3\"},\"filesystem\":{\"directory\":\"/var/loki/chunks\"}}}}",
                "version": "0.67.1"
              }
            ],
            "name": "loki-distributed",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "loki:\n  schemaConfig:\n    configs:\n      - from: 2020-09-07\n        store: boltdb-shipper\n        object_store: s3\n        schema: v11\n        index:\n          prefix: loki_index_\n          period: 24h\n\n  storageConfig:\n    boltdb_shipper:\n      shared_store: s3\n      active_index_directory: /var/loki/index\n      cache_location: /var/loki/cache\n      cache_ttl: 168h\n    filesystem:\n      directory: /var/loki/chunks\n    aws:\n      bucketnames: loki                                   # store traces in this bucket\n      endpoint: http://minio.minio.svc.cluster.local:9000\n      access_key_id: minioadmin                                 # optional. access key when using static credentials.\n      secret_access_key: minioadmin                                 # optional. secret key when using static credentials\n      s3forcepathstyle: true\n      insecure: true\n"
            ],
            "verify": false,
            "version": "0.67.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "helm_release.metrics_server",
            "minio_s3_bucket.loki",
            "minio_s3_bucket.tempo"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "metrics_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "metrics-server",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "metrics-server",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.6.2",
                "chart": "metrics-server",
                "name": "metrics-server",
                "namespace": "default",
                "revision": 1,
                "values": "{\"args\":[\"--kubelet-insecure-tls\"]}",
                "version": "3.8.3"
              }
            ],
            "name": "metrics-server",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes-sigs.github.io/metrics-server/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "args:\n  - --kubelet-insecure-tls\n"
            ],
            "verify": false,
            "version": "3.8.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "nginx_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "nginx-ingress-controller",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "nginx-ingress-controller",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.6.0",
                "chart": "nginx-ingress-controller",
                "name": "nginx-ingress-controller",
                "namespace": "default",
                "revision": 1,
                "values": "{\"service\":{\"type\":\"LoadBalancer\"}}",
                "version": "9.3.24"
              }
            ],
            "name": "nginx-ingress-controller",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "service.type",
                "type": "",
                "value": "LoadBalancer"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "9.3.24",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "opentelemetry_collector",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "opentelemetry-collector",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "opentelemetry-collector",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.67.0",
                "chart": "opentelemetry-collector",
                "name": "opentelemetry-collector",
                "namespace": "monitoring",
                "revision": 15,
                "values": "{\"config\":{\"exporters\":{\"logging\":{\"verbosity\":\"detailed\"},\"otlp\":{\"endpoint\":\"http://tempo-distributed-distributor.monitoring.svc.cluster.local:4317\",\"tls\":{\"insecure\":true}},\"prometheus\":{\"endpoint\":\"0.0.0.0:8889\"}},\"processors\":{\"attributes/spanname\":{\"actions\":[{\"action\":\"upsert\",\"from_context\":\"metadata.Name\",\"key\":\"span.name\"}]},\"batch\":{},\"spanmetrics\":{\"metrics_exporter\":\"prometheus\"}},\"receivers\":{\"jaeger\":{\"protocols\":{\"grpc\":{\"endpoint\":\"0.0.0.0:14250\"},\"thrift_compact\":{\"endpoint\":\"0.0.0.0:6831\"},\"thrift_http\":{\"endpoint\":\"0.0.0.0:14268\"}}},\"otlp/spanmetrics\":{\"protocols\":{\"grpc\":{\"endpoint\":\"0.0.0.0:56636\"}}}},\"service\":{\"pipelines\":{\"metrics/spanmetrics\":{\"exporters\":[\"prometheus\"],\"processors\":[\"batch\"],\"receivers\":[\"otlp/spanmetrics\"]},\"traces\":{\"exporters\":[\"otlp\"],\"processors\":[\"spanmetrics\",\"batch\"],\"receivers\":[\"jaeger\"]},\"traces/debug\":{\"exporters\":[\"logging\"],\"processors\":[\"attributes/spanname\"],\"receivers\":[\"jaeger\"]}},\"telemetry\":{\"logs\":{\"level\":\"debug\"}}}},\"mode\":\"deployment\"}",
                "version": "0.43.2"
              }
            ],
            "name": "opentelemetry-collector",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://open-telemetry.github.io/opentelemetry-helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "mode: deployment\nconfig:\n  receivers:\n    otlp/spanmetrics:\n      protocols:\n        grpc:\n          endpoint: 0.0.0.0:56636\n    jaeger:\n      protocols:\n        grpc:\n          endpoint: 0.0.0.0:14250\n        thrift_http:\n          endpoint: 0.0.0.0:14268\n        thrift_compact:\n          endpoint: 0.0.0.0:6831\n\n  processors:\n    attributes/spanname:\n      actions:\n        - key: span.name\n          from_context: metadata.Name\n          action: upsert\n    batch: { }\n    spanmetrics:\n      metrics_exporter: prometheus\n\n  exporters:\n    logging:\n      verbosity: detailed\n    prometheus:\n      endpoint: 0.0.0.0:8889\n    otlp:\n      tls:\n        insecure: true\n      endpoint: http://tempo-distributed-distributor.monitoring.svc.cluster.local:4317\n\n  service:\n    telemetry:\n      logs:\n        level: \"debug\"\n    pipelines:\n      traces/debug:\n        receivers: [jaeger]\n        processors: [attributes/spanname]\n        exporters: [logging]\n\n      traces:\n        receivers: [ jaeger ]\n        processors: [ spanmetrics, batch ]\n        exporters: [ otlp ]\n\n      metrics/spanmetrics:\n        receivers: [ otlp/spanmetrics ]\n        processors: [ batch ]\n        exporters: [ prometheus ]\n"
            ],
            "verify": false,
            "version": "0.43.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "promtail",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "promtail",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "promtail",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.7.0",
                "chart": "promtail",
                "name": "promtail",
                "namespace": "monitoring",
                "revision": 1,
                "values": "{\"config\":{\"clients\":[{\"url\":\"http://loki-distributed-gateway.monitoring.svc.cluster.local/loki/api/v1/push\"}],\"snippets\":{\"pipelineStages\":[{\"cri\":{}},{\"json\":{\"expressions\":{\"stream\":\"stream\"}}},{\"labels\":{\"stream\":null}}]}}}",
                "version": "6.7.4"
              }
            ],
            "name": "promtail",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "config:\n  clients:\n    - url: http://loki-distributed-gateway.monitoring.svc.cluster.local/loki/api/v1/push\n\n  snippets:\n    pipelineStages:\n      - cri: {}\n      - json:\n          expressions:\n            stream: stream\n      - labels:\n          stream:\n"
            ],
            "verify": false,
            "version": "6.7.4",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "helm_release.loki_distributed",
            "helm_release.metrics_server",
            "minio_s3_bucket.loki",
            "minio_s3_bucket.tempo"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "tempo",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "tempo-distributed",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "tempo-distributed",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.5.0",
                "chart": "tempo-distributed",
                "name": "tempo-distributed",
                "namespace": "monitoring",
                "revision": 5,
                "values": "{\"global_overrides\":{\"metrics_generator_processors\":[\"service-graphs\",\"span-metrics\"]},\"metricsGenerator\":{\"annotations\":{},\"config\":{\"processor\":{\"service_graphs\":{\"dimensions\":[],\"histogram_buckets\":[0.1,0.2,0.4,0.8,1.6,3.2,6.4,12.8],\"max_items\":10000,\"wait\":\"50s\",\"workers\":10},\"span_metrics\":{\"dimensions\":[],\"histogram_buckets\":[0.002,0.004,0.008,0.016,0.032,0.064,0.128,0.256,0.512,1.02,2.05,4.1]}},\"registry\":{\"collection_interval\":\"15s\",\"external_labels\":{},\"stale_duration\":\"15m\"},\"storage\":{\"path\":\"/var/tempo/wal\",\"remote_write\":[{\"send_exemplars\":true,\"url\":\"http://kube-prometheus-stack-prometheus.monitoring:9090/api/v1/write\"}],\"remote_write_flush_deadline\":\"1m\",\"wal\":null}},\"enabled\":true,\"replicas\":1},\"queryFrontend\":{\"query\":{\"enabled\":true}},\"search\":{\"enabled\":true},\"storage\":{\"trace\":{\"backend\":\"s3\",\"s3\":{\"access_key\":\"minioadmin\",\"bucket\":\"tempo\",\"endpoint\":\"minio.minio.svc.cluster.local:9000\",\"insecure\":true,\"secret_key\":\"minioadmin\"}}},\"tempo\":{\"extraArgs\":{\"distributor.log-received-traces\":true},\"securityContext\":{\"readOnlyRootFilesystem\":false}},\"traces\":{\"otlp\":{\"grpc\":{\"enabled\":true,\"receiverConfig\":{}},\"http\":{\"enabled\":true,\"receiverConfig\":{}}}}}",
                "version": "0.27.10"
              }
            ],
            "name": "tempo-distributed",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# create bucket in minio\nsearch:\n  # -- Enable Tempo search\n  enabled: true\ntraces:\n  otlp:\n    http:\n      enabled: true\n      receiverConfig: { }\n    grpc:\n      enabled: true\n      receiverConfig: { }\nqueryFrontend:\n  query:\n    # -- Required for grafana version \u003c7.5 for compatibility with jaeger-ui. Doesn't work on ARM arch\n    enabled: true\nstorage:\n  trace:\n    backend: s3\n    s3:\n      bucket: tempo                                   # store traces in this bucket\n      endpoint: minio.minio.svc.cluster.local:9000\n      access_key: minioadmin                                 # optional. access key when using static credentials.\n      secret_key: minioadmin                                 # optional. secret key when using static credentials\n      insecure: true                                 # optional. enable if endpoint is http\ntempo:\n  extraArgs:\n    \"distributor.log-received-traces\": true\n  securityContext:\n    readOnlyRootFilesystem: false\n\nglobal_overrides:\n  metrics_generator_processors:\n    - service-graphs\n    - span-metrics\n\nmetricsGenerator:\n  enabled: true\n  # -- Annotations for the metrics-generator StatefulSet\n  annotations: { }\n  # -- Number of replicas for the metrics-generator\n  replicas: 1\n\n  config:\n    registry:\n      collection_interval: 15s\n      external_labels: { }\n      stale_duration: 15m\n    processor:\n      service_graphs:\n        # -- Additional dimensions to add to the metrics. Dimensions are searched for in the\n        # -- resource and span attributes and are added to the metrics if present.\n        dimensions: [ ]\n        histogram_buckets: [ 0.1, 0.2, 0.4, 0.8, 1.6, 3.2, 6.4, 12.8 ]\n        max_items: 10000\n        wait: 50s\n        workers: 10\n      span_metrics:\n        # -- Additional dimensions to add to the metrics along with the default dimensions.\n        # -- Dimensions are searched for in the resource and span attributes and are added to the metrics if present.\n        dimensions: [ ]\n        histogram_buckets: [ 0.002, 0.004, 0.008, 0.016, 0.032, 0.064, 0.128, 0.256, 0.512, 1.02, 2.05, 4.10 ]\n    storage:\n      path: /var/tempo/wal\n      wal:\n      remote_write_flush_deadline: 1m\n      # -- A list of remote write endpoints.\n      # -- https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_write\n      remote_write:\n        - url: http://kube-prometheus-stack-prometheus.monitoring:9090/api/v1/write\n          send_exemplars: true\n"
            ],
            "verify": false,
            "version": "0.27.10",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "minio",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": "/api/v1/namespaces/minio",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/minio",
            "ignore_fields": null,
            "kind": "Namespace",
            "live_manifest_incluster": "008f2133061fd9c3f13a4459807a4864b1d5763817e91405b5b12bf5541bb010",
            "live_uid": "0317f577-33f1-41db-b3ff-6f0d9b9da5ea",
            "name": "minio",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "0317f577-33f1-41db-b3ff-6f0d9b9da5ea",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Namespace\nmetadata:\n  labels:\n    name: minio\n  name: minio\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Namespace\nmetadata:\n  labels:\n    name: minio\n  name: minio\n",
            "yaml_incluster": "008f2133061fd9c3f13a4459807a4864b1d5763817e91405b5b12bf5541bb010"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_file_documents.minio_docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/minio/services/minio",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/minio/services/minio",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "28a70157919e2a8d47bb1cbbd60a332bd41ccb0992e4b211cf6e9c7b7fcbc479",
            "live_uid": "adc1cfe0-5634-4a35-9edd-d61197f1398c",
            "name": "minio",
            "namespace": "minio",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "adc1cfe0-5634-4a35-9edd-d61197f1398c",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: minio\n  name: minio\n  namespace: minio\nspec:\n  ports:\n  - name: api\n    port: 9000\n    protocol: TCP\n    targetPort: 9000\n  - name: console\n    port: 9090\n    protocol: TCP\n    targetPort: 9090\n  selector:\n    app: minio\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: minio\n  name: minio\n  namespace: minio\nspec:\n  ports:\n  - name: api\n    port: 9000\n    protocol: TCP\n    targetPort: 9000\n  - name: console\n    port: 9090\n    protocol: TCP\n    targetPort: 9090\n  selector:\n    app: minio\n",
            "yaml_incluster": "28a70157919e2a8d47bb1cbbd60a332bd41ccb0992e4b211cf6e9c7b7fcbc479"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_file_documents.minio_docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/minio/deployments/minio-deployment",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/minio/deployments/minio-deployment",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "3816100bfa48a809d7ab6d828638293cfe444bbf55a5791abab984009124df7a",
            "live_uid": "301171e3-032c-4e32-abe0-ad606d7151a9",
            "name": "minio-deployment",
            "namespace": "minio",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "301171e3-032c-4e32-abe0-ad606d7151a9",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: minio\n  name: minio-deployment\n  namespace: minio\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      containers:\n      - args:\n        - minio server /data --console-address :9090\n        command:\n        - /bin/bash\n        - -c\n        image: quay.io/minio/minio:latest\n        name: minio\n        volumeMounts:\n        - mountPath: /data\n          name: localvolume\n      volumes:\n      - hostPath:\n          path: /mnt/disk1/data\n          type: DirectoryOrCreate\n        name: localvolume\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: minio\n  name: minio-deployment\n  namespace: minio\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      containers:\n      - args:\n        - minio server /data --console-address :9090\n        command:\n        - /bin/bash\n        - -c\n        image: quay.io/minio/minio:latest\n        name: minio\n        volumeMounts:\n        - mountPath: /data\n          name: localvolume\n      volumes:\n      - hostPath:\n          path: /mnt/disk1/data\n          type: DirectoryOrCreate\n        name: localvolume\n",
            "yaml_incluster": "3816100bfa48a809d7ab6d828638293cfe444bbf55a5791abab984009124df7a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_file_documents.minio_docs"
          ]
        },
        {
          "index_key": "/apis/networking.k8s.io/v1/namespaces/minio/ingresses/minimal-ingress",
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.k8s.io/v1/namespaces/minio/ingresses/minimal-ingress",
            "ignore_fields": null,
            "kind": "Ingress",
            "live_manifest_incluster": "fad2a4d7cd40a4cad55e369142563a4e52f2afe2ae1c0ca9f176f3fcac4d4b0e",
            "live_uid": "e8adade9-cc94-44df-95af-74b2f46c5e6c",
            "name": "minimal-ingress",
            "namespace": "minio",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "e8adade9-cc94-44df-95af-74b2f46c5e6c",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\n  name: minimal-ingress\n  namespace: minio\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: minio.localhost\n    http:\n      paths:\n      - backend:\n          service:\n            name: minio\n            port:\n              name: console\n        path: /\n        pathType: Prefix\n  - host: minio-api.localhost\n    http:\n      paths:\n      - backend:\n          service:\n            name: minio\n            port:\n              name: api\n        path: /\n        pathType: Prefix\n",
            "yaml_body_parsed": "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\n  name: minimal-ingress\n  namespace: minio\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: minio.localhost\n    http:\n      paths:\n      - backend:\n          service:\n            name: minio\n            port:\n              name: console\n        path: /\n        pathType: Prefix\n  - host: minio-api.localhost\n    http:\n      paths:\n      - backend:\n          service:\n            name: minio\n            port:\n              name: api\n        path: /\n        pathType: Prefix\n",
            "yaml_incluster": "fad2a4d7cd40a4cad55e369142563a4e52f2afe2ae1c0ca9f176f3fcac4d4b0e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_file_documents.minio_docs"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "minio_s3_bucket",
      "name": "loki",
      "provider": "provider[\"registry.terraform.io/aminueza/minio\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "public",
            "arn": "arn:aws:s3:::loki",
            "bucket": "loki",
            "bucket_domain_name": "http://minio-api.localhost/minio/loki",
            "bucket_prefix": null,
            "force_destroy": false,
            "id": "loki",
            "quota": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "minio_s3_bucket",
      "name": "tempo",
      "provider": "provider[\"registry.terraform.io/aminueza/minio\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "public",
            "arn": "arn:aws:s3:::tempo",
            "bucket": "tempo",
            "bucket_domain_name": "http://minio-api.localhost/minio/tempo",
            "bucket_prefix": null,
            "force_destroy": false,
            "id": "tempo",
            "quota": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
